name: Terraform CI

on: [pull_request]
env:
    dev
jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
   
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init
       
    - name: Terraform Validate
      run: terraform validate
   
    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      run: terraform apply -auto-approve
      
    - name: Set S3_ECR_REPOSITORY
      run: echo "S3_ECR_REPOSITORY=dev-ramya-coaching18-infra-ecr-s3" >> $GITHUB_ENV
  
    - name: Set SQS_ECR_REPOSITORY
      run: echo "SQS_ECR_REPOSITORY=dev-ramya-coaching18-infra-ecr-sqs" >> $GITHUB_ENV
  
    - name: Set S3_CONTAINER_NAME
      run: echo "S3_CONTAINER_NAME=dev-ramya-coaching18-infra-container-s3" >> $GITHUB_ENV
  
    - name: Set SQS_CONTAINER_NAME
      run: echo "SQS_CONTAINER_NAME=dev-ramya-coaching18-infra-container-sqs" >> $GITHUB_ENV
  
    - name: Set S3_ECS_SERVICE
      run: echo "S3_ECS_SERVICE=dev-ramya-coaching18-infra-service-s3" >> $GITHUB_ENV
  
    - name: Set SQS_ECS_SERVICE
      run: echo "SQS_ECS_SERVICE=dev-ramya-coaching18-infra-service-sqs" >> $GITHUB_ENV

    - name: Set S3_TASK_DEF
      run: echo "S3_TASK_DEF=dev-ramya-coaching18-infra-task-s3" >> $GITHUB_ENV
 
    - name: Set SQS_TASK_DEF
      run: echo "SQS_TASK_DEF=dev-ramya-coaching18-infra-task-sqs" >> $GITHUB_ENV
  
    - name: Set ECS_CLUSTER
      run: echo "ECS_CLUSTER=dev-ramya-coaching18-infra-ecs" >> $GITHUB_ENV

    - name: Set AWS_REGION
      run: echo "AWS_REGION=ap-southeast-1" >> $GITHUB_ENV

 
